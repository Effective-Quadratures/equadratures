Effective Quadratures
========================================

Overview
--------------
Effective Quadratures is an open-source Python-based library that supports a wide range of utilities in *uncertainty quantification*, *dimension reduction*, *sensitivity analysis* and *optimisation*---all using polynomials. The project was initially born out of a need to replicate the results of various works within the field of polynomial chaos. It has subsequently morphed into a dedicated effort to use polynomials for a range of objectives under the broad umbrella of **supervised machine learning**. 

The primary developers are academics at the `University of Cambridge <http://www.cam.ac.uk>`__, with advisory support from `Stanford University <http://www.stanford.edu>`__, `Universita degli Studi di Cagliari <https://unica.it/unica/>`__, and the `University of Utah <http://www.utah.edu>`__. The project is under active development and we use Travis and Coveralls for testing.

.. image:: https://travis-ci.org/Effective-Quadratures/Effective-Quadratures.svg?branch=master
	:target: https://travis-ci.org/Effective-Quadratures/

.. image:: https://coveralls.io/repos/github/Effective-Quadratures/Effective-Quadratures/badge.svg?branch=master
	:target: https://coveralls.io/github/Effective-Quadratures/Effective-Quadratures?branch=master


Download Links
---------------
To download the code, please visit `www.effective-quadratures.org <http://www.effective-quadratures.org>`__. Click either on the *Fork Code* button or the Github link.

**Installation:**
For installation on Mac and Linux systems, simply type the following into the terminal. 

.. code::
	
	sudo python setup.py install

For installation on Windows, you will need `Anaconda <https://www.continuum.io/downloads#windows>`__; select the Python 2.7 option. Upon successful installation, open the Sypder IDE and go into the Effective-Quadratures-master directory and type the following in the command window

.. code::

	python setup.py install

This should build the code. Just make sure you include the location of effective_quadratures folder to your python file and you should be good to go. To run this code you will require python 2.7, numpy, scipy and matplotlib. 


License and copyright
-----------------------
As of version 7.0, Effective Quadratures is under an end-user license agreement (:guilabel:`EULA`). Details of this agreement can be found `here <https://github.com/Effective-Quadratures/Effective-Quadratures/blob/master/LICENCE.pdf>`__. There are two types of licenses that may be used:
 
.. Important:: **For-profit license**.
   The Licensee shall not modify, adapt, disassemble, reverse engineer, decompile, translate or otherwise attempt to discover the source code of the Software or permit any of these things to happen except as allowed by applicable law. The for-profit Licensee shall sign, date and return a copy of this licence to contact@effective-quadratures.org.

.. Important:: **Not-for-profit license**.
   The Licensee may correct errors, modify the Software and create derivative works.  The Licensee shall copy all error corrections promptly to the Licensor and hereby assigns copyright in them to the Licensor.  The Licensee shall own modifications and derivative works it makes of the Software but not any Software incorporated in them.  The restrictions in clause 3 shall also apply to any modification or derivative work, to the extent that it is based on or utilises the Software, unless the Licensorâ€™s prior written consent to vary the restrictions has been obtained.  Such consent shall be subject to payment and to such other terms as may be fair and reasonable in the circumstances.

This implies that for strictly not-for-profit purposes (e.g., largely academic and research institutions), the software is free. For for-profit entities, use of the code may be subject to a license. 

References
-----------

.. [1] Seshadri, P., Iaccarino, G., Ghisu, T. Quadrature Strategies for Constructing Polynomial Approximations. [To appear in Springer shortly]. Preprint available: `https://arxiv.org/abs/1805.07296 <https://arxiv.org/abs/1805.07296>`__

.. [2] Seshadri, P., Narayan, A., Sankaran M. Effectively Subsampled Quadratures for Least Squares Polynomial Approximations." SIAM/ASA Journal on Uncertainty Quantification 5.1 (2017): 1003-1023. `https://epubs.siam.org/doi/abs/10.1137/16M1057668 <https://epubs.siam.org/doi/abs/10.1137/16M1057668>`__

.. [3] Seshadri, P., Parks, G. T., Effective-Quadratures (EQ): Polynomials for Computational Engineering Studies, Journal of Open Source Software, 2(11), 166, `doi:10.21105/joss.00166 <http://joss.theoj.org/papers/ba651f2b3608a5d2b085af06b1108747>`__
